{"version":3,"sources":["components/ImageGalleryItem/ImageGelleryItem.module.css","components/Modal/Modal.module.css","components/Loader/LoaderSpiner.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","services/imageApi.js","components/Loader/Loader.jsx","components/SearchBar/SearchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/App/App.jsx","index.js","components/SearchBar/SearchBar.module.css","components/App/App.module.css"],"names":["module","exports","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","LoaderSpiner","className","s","Loader","type","color","height","width","timeout","SearchBar","state","imageName","handleNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","Searchbar","SearchForm","this","SearchFormButton","SearchFormButtonLabel","onChange","SearchFormInput","placeholder","Component","ImageGalleryItem","webformatURL","tags","openModal","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","map","id","largeImageURL","Button","ModalRoot","document","querySelector","Modal","backdrop","createRef","handleKeyPress","code","onClose","handleBackdropClick","backdropRef","current","target","window","addEventListener","removeEventListener","image","createPortal","Overlay","ref","role","App","modalIsOpen","selectedImage","status","resetState","handleFormSubmit","closeModal","onLoadMore","prevState","prevProps","data","hits","pictures","catch","scrollTo","top","body","scrollHeight","behavior","length","message","ReactDOM","render"],"mappings":"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","file":"static/js/main.31d72096.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGelleryItem_ImageGalleryItem__3j6Uy\",\"ImageGalleryItemImage\":\"ImageGelleryItem_ImageGalleryItemImage__26uNF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1Z3vi\",\"Modal\":\"Modal_Modal__AaZXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"LoaderSpiner_Loader__1kA6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__26P7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__GnRsU\"};","function fetchImages(name, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=21697918-6e31458764a1a6acf0f5f3f6d&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`There is no images with name ${name}`));\r\n  });\r\n}\r\nconst api = { fetchImages };\r\nexport default api;\r\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './LoaderSpiner.module.css';\r\n\r\nexport default function LoaderSpiner() {\r\n  return (\r\n    <div className={s.Loader}>\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={120}\r\n        width={120}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport s from './SearchBar.module.css';\r\n\r\nexport default class SearchBar extends Component {\r\n  state = {\r\n    imageName: '',\r\n  };\r\n  handleNameChange = e => {\r\n    this.setState({ imageName: e.currentTarget.value.toLowerCase() });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.imageName.trim() === '') {\r\n      return toast.error('Enter valid name,please!');\r\n    }\r\n    this.props.onSubmit(this.state.imageName);\r\n    this.setState({ imageName: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}></span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handleNameChange}\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            value={this.state.imageName}\r\n            // autocomplete=\"off\"\r\n            // autofocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './ImageGelleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({ webformatURL, tags, openModal }) {\r\n  return (\r\n    <li onClick={openModal} className={s.ImageGalleryItem}>\r\n      <img src={webformatURL} alt={tags} className={s.ImageGalleryItemImage} />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n","// import React, { Component } from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ images, openModal }) => {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          tags={tags}\r\n          webformatURL={webformatURL}\r\n          openModal={() => openModal(largeImageURL, tags)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\n// import LoaderSpiner from '../Loader/Loader';\r\n// import api from '../../services/imageApi';\r\n// export default class ImageGahllery extends Component {\r\n//   state = {\r\n//     images: [],\r\n//     error: null,\r\n//     status: 'idle',\r\n//   };\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const prevName = prevProps.imageName;\r\n//     const newName = this.props.imageName;\r\n//     const page = this.props.page;\r\n//     console.log(page);\r\n//     if (prevName !== newName) {\r\n//       //   console.log('changed name');\r\n//       //   console.log('prev', prevName);\r\n//       //   console.log('this', newName);\r\n\r\n//       this.setState({ status: 'pending' });\r\n\r\n//       api\r\n//         .fetchImages(newName, page)\r\n//         .then(data => data.hits)\r\n//         .then(images => this.setState({ images, status: 'resolved' }))\r\n//         .catch(error => this.setState({ error, status: 'rejected' }));\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     const { images, error, status } = this.state;\r\n\r\n//     if (status === 'idle') {\r\n//       return <div> Enter Image name</div>;\r\n//     }\r\n//     if (status === 'pending') {\r\n//       return <LoaderSpiner />;\r\n//     }\r\n//     if (status === 'rejected') {\r\n//       return <h1>{error.message}</h1>;\r\n//     }\r\n//     if (status === 'resolved') {\r\n//       return (\r\n//         <ul className=\"ImageGallery\">\r\n//           {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n//             <ImageGalleryItem\r\n//               key={id}\r\n//               tags={tags}\r\n//               webformatURL={webformatURL}\r\n//               // largeImageURL={largeImageURL}\r\n//               openModal={this.props.openModal(largeImageURL)}\r\n//             />\r\n//           ))}\r\n//         </ul>\r\n//       );\r\n//     }\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className={s.Button}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component, createRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst ModalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  backdrop = createRef();\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress);\r\n  }\r\n  handleKeyPress = e => {\r\n    if (e.code !== 'Escape') {\r\n      return;\r\n    }\r\n    this.props.onClose();\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (this.backdropRef.current && e.target !== this.backdropRef.current) {\r\n      return;\r\n    }\r\n\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    const { image } = this.props;\r\n    return createPortal(\r\n      <div\r\n        className={s.Overlay}\r\n        ref={this.backdropRef}\r\n        onClick={this.props.onClose}\r\n        role=\"presentation\"\r\n      >\r\n        <div className={s.Modal}>\r\n          <img src={image.src} alt={image.alt} />\r\n        </div>\r\n      </div>,\r\n      ModalRoot,\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport api from '../../services/imageApi';\nimport LoaderSpiner from '../Loader/Loader';\nimport SearchBar from '../SearchBar/SearchBar';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Button from '../Button/Button';\nimport Modal from '../Modal/Modal';\nimport s from './App.module.css';\nexport default class App extends Component {\n  state = {\n    imageName: '',\n    page: 1,\n    images: [],\n    modalIsOpen: false,\n    selectedImage: null,\n    status: 'idle',\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { imageName, page } = this.state;\n    if (prevState.imageName !== imageName || prevState.page !== page) {\n      this.setState({ status: 'pending' });\n\n      api\n        .fetchImages(imageName, page)\n        .then(data => data.hits)\n        .then(pictures =>\n          this.setState(prevState => ({\n            images: [...prevState.images, ...pictures],\n            status: 'resolved',\n          })),\n        )\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n    if (prevState.images !== this.state.images) {\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  resetState = () => {\n    this.setState({\n      imageName: '',\n      page: 1,\n      images: [],\n      selectedImage: null,\n      status: 'idle',\n    });\n  };\n\n  handleFormSubmit = imageName => {\n    this.resetState();\n    this.setState({ imageName });\n  };\n\n  openModal = (src, alt) => {\n    this.setState({\n      modalIsOpen: true,\n      selectedImage: { src, alt },\n    });\n  };\n  closeModal = () => this.setState({ modalIsOpen: false });\n\n  onLoadMore = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n\n  render() {\n    const { images, error, status, selectedImage, modalIsOpen } = this.state;\n\n    if (status === 'idle') {\n      return (\n        <div className={s.App}>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n        </div>\n      );\n    }\n    if (status === 'pending') {\n      return (\n        <div className={s.App}>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n          <ImageGallery openModal={this.openModal} images={images} />\n          <LoaderSpiner />\n          {images.length > 0 && <Button onClick={this.onLoadMore} />}\n        </div>\n      );\n    }\n    if (status === 'rejected') {\n      return (\n        <div className={s.App}>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n          <h1>{error.message}</h1>\n        </div>\n      );\n    }\n    if (status === 'resolved') {\n      return (\n        <div className={s.App}>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n          <ImageGallery openModal={this.openModal} images={images} />\n          {images.length > 0 && <Button onClick={this.onLoadMore} />}\n          {modalIsOpen && (\n            <Modal image={selectedImage} onClose={this.closeModal} />\n          )}\n          <ToastContainer />\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__3Bx_W\",\"SearchForm\":\"SearchBar_SearchForm__3G2nt\",\"SearchFormButton\":\"SearchBar_SearchFormButton__F72vS\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__3o58T\",\"SearchFormInput\":\"SearchBar_SearchFormInput__15pCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__O3Vv0\"};"],"sourceRoot":""}